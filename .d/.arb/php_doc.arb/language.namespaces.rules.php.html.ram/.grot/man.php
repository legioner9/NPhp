<? 

namespace A;
use B\D, C\E as F;

// вызовы функций

foo();      // Сперва пытается вызвать функцию foo, определённую в пространстве имён A,
            // Затем вызывает глобальную функцию foo

\foo();     // Вызывает функцию foo, определённую в глобальном пространстве

my\foo();   // Вызывает функцию foo, определённую в пространстве имён A\my

F();        // Сперва пытается вызвать функцию F, определённую в пространстве имён A,
            // Затем вызывает глобальную функцию F

// Ссылки на классы

new B();    // Создаёт объект класса B, определённого в пространстве имён A.
            // Если класс не найден, то пытается сделать автозагрузку класса A\B

new D();    // Используя правила импорта, создаёт объект класса D, определённого в пространстве имён B,
            // если класс не найден, то пытается сделать автозагрузку класса B\D

new F();    // Используя правила импорта, создаёт объект класса E, определённого в пространстве имён C,
            // если класс не найден, то пытается сделать автозагрузку класса C\E

new \B();   // Создаёт объект класса B, определённого в глобальном пространстве,
            // если класс не найден, то пытается сделать автозагрузку класса B

new \D();   // Создаёт объект класса D, определённого в глобальном пространстве,
            // если класс не найден, то пытается сделать автозагрузку класса D

new \F();   // Создаёт объект класса F, определённого в глобальном пространстве,
            // если класс не найден, то пытается сделать автозагрузку класса F

// Статические методы и функции пространства имён из другого пространства имён

B\foo();    // Вызывает функцию foo из пространства имён A\B

B::foo();   // Вызывает метод foo из класса B, определённого в пространстве имён A,
            // если класс A\B не найден, то пытается сделать автозагрузку класса A\B

D::foo();   // Используя правила импорта, вызывает метод foo класса D, определённого в пространстве имён B,
            // если класс B\D не найден, то пытается сделать автозагрузку класса B\D

\B\foo();   // Вызывает функцию foo из пространства имён B

\B::foo();  // Вызывает метод foo класса B из глобального пространства,
            // если класс B не найден, то пытается сделать автозагрузку класса B

// Статические методы и функции пространства имён из текущего пространства имён

A\B::foo();   // Вызывает метод foo класса B из пространства имён A\A,
              // если класс A\A\B не найден, то пытается сделать автозагрузку класса A\A\B

\A\B::foo();  // Вызывает метод foo класса B из пространства имён A,
              // если класс A\B не найден, то пытается сделать автозагрузку класса A\B