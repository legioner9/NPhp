<?

// ервая из них - ссылки PHP позволяют создать две переменные указывающие 
// на одно и то же значение

$a = &$b;

// При присвоении, передаче или возврате неинициализированной переменной 
// по ссылке, происходит её создание

// Пример #1 Использование ссылок с неинициализированными переменными

function foo(&$var)
{
}

foo($a); // $a создана и равна null

// Пример #2 Присвоение ссылок глобальным переменным внутри функции

$var1 = "Пример переменной";
$var2 = "";

function global_references($use_globals)
{
    global $var1, $var2;
    if (!$use_globals) {
        $var2 = &$var1; // только локально
    } else {
        $GLOBALS["var2"] = &$var1; // глобально
    }
}

global_references(false);
echo "значение var2: '$var2'\n"; // значение var2: ''
global_references(true);
echo "значение var2: '$var2'\n"; // значение var2: 'Пример переменной'

// Думайте о global $var; как о сокращении от $var =& $GLOBALS['var'];. 
// Таким образом, присвоение $var другой ссылки влияет лишь на локальную переменную

// Пример #3 Ссылки и foreach

$ref = 0;
$row = &$ref;
foreach (array(1, 2, 3) as $row) {
    // сделать что-нибудь
}
echo $ref; // 3 - последнее значение, используемое в цикле

// Передача по ссылке _pta

function foo_pta(&$var) {
    $var++;
}

$a = 5;
foo_pta($a);